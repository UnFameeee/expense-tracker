<div class="row">
  <!-- Tổng quan cân đối thu chi -->
  <div class="col-md-6 mb-4">
    <div class="card h-100">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Cân đối thu - chi</h5>
        <div class="btn-group btn-group-sm">
          <button type="button" class="btn btn-outline-secondary active" data-period="month">Tháng</button>
          <button type="button" class="btn btn-outline-secondary" data-period="year">Năm</button>
        </div>
      </div>
      <div class="card-body">
        <div id="balance-summary" class="p-3">
          <!-- Nội dung cân đối thu chi sẽ được load bằng JavaScript -->
          <div class="text-center">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Đang tải...</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Chi tiêu gần đây -->
  <div class="col-md-6 mb-4">
    <div class="card h-100">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Chi tiêu gần đây</h5>
        <a href="/expenses" class="btn btn-sm btn-outline-primary">Xem tất cả</a>
      </div>
      <div class="card-body p-0">
        <ul class="list-group list-group-flush" id="recent-expenses">
          <!-- Danh sách chi tiêu gần đây sẽ được load bằng JavaScript -->
          <li class="list-group-item text-center text-muted py-3">
            <div class="spinner-border spinner-border-sm text-primary" role="status">
              <span class="visually-hidden">Đang tải...</span>
            </div>
            <span class="ms-2">Đang tải dữ liệu...</span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <!-- Thống kê chi tiêu theo danh mục -->
  <div class="col-md-6 mb-4">
    <div class="card h-100">
      <div class="card-header">
        <h5 class="mb-0">Chi tiêu theo danh mục</h5>
      </div>
      <div class="card-body">
        <div id="category-stats"></div>
      </div>
    </div>
  </div>

  <!-- Trạng thái ngân sách -->
  <div class="col-md-6 mb-4">
    <div class="card h-100">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Trạng thái ngân sách</h5>
        <a href="/budgets" class="btn btn-sm btn-outline-primary">Xem tất cả</a>
      </div>
      <div class="card-body p-0">
        <div id="budget-status"></div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  const token = localStorage.getItem('token');

  // Tải cân đối thu chi
  function loadBalanceSummary(period = 'month') {
    fetch(`/api/incomes/balance?period=${period}`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    })
    .then(response => {
      if (response.status === 401) {
        // Token hết hạn, chuyển hướng đến trang đăng nhập
        localStorage.removeItem('token');
        window.location.href = '/login';
        throw new Error('Phiên đăng nhập hết hạn');
      }
      if (!response.ok) throw new Error('Không thể tải dữ liệu cân đối thu chi');
      return response.json();
    })
    .then(balance => {
      const balanceSummary = document.getElementById('balance-summary');
      
      const balanceClass = balance.isPositive ? 'balance-positive' : 'balance-negative';
      const balanceIcon = balance.isPositive ? 'bi-emoji-smile' : 'bi-emoji-frown';
      let periodLabel = '';
      if (balance.period === 'month' || balance.period === 'Tháng này' || balance.period === 'Thu00e1ng nu00e0y') {
        periodLabel = 'Tháng này';
      } else if (balance.period === 'year' || balance.period === 'Năm này' || balance.period === 'Nu0103m nu00e0y') {
        periodLabel = 'Năm này';
      } else {
        periodLabel = balance.period;
      }
      balanceSummary.innerHTML = `
        <div class="balance-card ${balanceClass}">
          <div class="balance-title">
            <i class="bi ${balanceIcon}"></i> Cân đối ${periodLabel}
          </div>
          <div class="balance-amount">${formatCurrency(balance.balance)}</div>
          <div class="balance-details">
            <div class="balance-income">
              <span>Thu nhập</span>
              <span class="balance-income-amount">${formatCurrency(balance.totalIncome)}</span>
            </div>
            <div class="balance-expense">
              <span>Chi tiêu</span>
              <span class="balance-expense-amount">${formatCurrency(balance.totalExpense)}</span>
            </div>
          </div>
          <div class="balance-savings">
            <span>Tỉ lệ tiết kiệm: <span class="balance-savings-rate">${balance.savingsRate}%</span></span>
          </div>
        </div>
      `;
    })
    .catch(error => {
      console.error('Lỗi khi tải cân đối thu chi:', error);
      const balanceSummary = document.getElementById('balance-summary');
      balanceSummary.innerHTML = `
        <div class="alert alert-warning">
          <i class="bi bi-exclamation-triangle me-2"></i> Không thể tải dữ liệu cân đối thu chi. 
          <button class="btn btn-sm btn-outline-secondary ms-2" onclick="loadBalanceSummary()">Thử lại</button>
        </div>
      `;
    });
  }

  // Tải chi tiêu gần đây
  function loadRecentExpenses() {
    fetch('/api/expenses?limit=5', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    })
    .then(response => {
      if (!response.ok) throw new Error('Không thể tải dữ liệu chi tiêu');
      return response.json();
    })
    .then(expenses => {
      const recentExpenses = document.getElementById('recent-expenses');
      
      if (expenses.length === 0) {
        recentExpenses.innerHTML = '<li class="list-group-item text-center text-muted py-3">Chưa có chi tiêu nào</li>';
        return;
      }
      
      recentExpenses.innerHTML = '';
      
      expenses.forEach(expense => {
        // Xác định icon cho danh mục
        let categoryIcon = expense.category ? expense.category.icon : 'bi-tag';
        let categoryColor = expense.category ? expense.category.color : '#6c757d';
        let categoryName = expense.category ? expense.category.name : 'Chưa phân loại';
        
        const li = document.createElement('li');
        li.className = 'list-group-item';
        li.innerHTML = `
          <div class="d-flex justify-content-between align-items-start">
            <div>
              <div class="mb-1">
                <span class="me-2" style="color: ${categoryColor}">
                  <i class="bi ${categoryIcon}"></i>
                </span>
                <span>${expense.description}</span>
              </div>
              <small class="text-muted">
                <i class="bi bi-calendar3"></i> ${formatDate(expense.date)}
              </small>
            </div>
            <div>
              <span class="text-danger fw-bold">${formatCurrency(expense.amount)}</span>
            </div>
          </div>
        `;
        
        recentExpenses.appendChild(li);
      });
    })
    .catch(error => {
      console.error('Lỗi khi tải chi tiêu gần đây:', error);
      const recentExpenses = document.getElementById('recent-expenses');
      recentExpenses.innerHTML = '<li class="list-group-item text-center text-muted py-3">Không thể tải dữ liệu chi tiêu</li>';
    });
  }

  // Tải thống kê chi tiêu theo danh mục
  function loadExpenseCategoryStats() {
    fetch('/api/expenses/stats?period=month', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    })
    .then(response => {
      if (response.status === 401) {
        localStorage.removeItem('token');
        window.location.href = '/login';
        throw new Error('Phiên đăng nhập hết hạn');
      }
      if (!response.ok) throw new Error('Không thể tải dữ liệu thống kê');
      return response.json();
    })
    .then(data => {
      const categoryStats = document.getElementById('category-stats');
      
      // Kiểm tra dữ liệu
      console.log('Category stats data:', data);
      
      // Nũn khi không có dữ liệu hiện thị
      if (!data || !data.stats || data.stats.length === 0) {
        categoryStats.innerHTML = '<div class="text-center text-muted py-3">Chưa có dữ liệu chi tiêu</div>';
        return;
      }
      
      let html = '<ul class="category-stats">';
      
      // Tính tổng chi tiêu
      const totalExpense = data.stats.reduce((sum, stat) => sum + (stat.amount || 0), 0);
      
      data.stats.forEach(stat => {
        // Đảm bảo các trường không bị undefined
        const category = stat.category || {};
        const amount = stat.amount || 0;
        const percentage = totalExpense > 0 ? Math.round((amount / totalExpense) * 100) : 0;
        
        html += `
          <li class="category-stat-item">
            <div class="category-stat-name">
              <div class="category-stat-icon" style="background-color: ${category.color || '#6c757d'}">
                <i class="bi ${category.icon || 'bi-question-circle'} text-white"></i>
              </div>
              ${category.name || 'Khác'}
            </div>
            <div class="category-stat-amount">${formatCurrency(amount)}</div>
            <div class="w-100 category-progress">
              <div class="category-progress-bar" style="width: ${percentage}%; background-color: ${category.color || '#6c757d'}"></div>
            </div>
          </li>
        `;
      });
      
      html += '</ul>';
      categoryStats.innerHTML = html;
    })
    .catch(error => {
      console.error('Lỗi khi tải thống kê chi tiêu:', error);
      const categoryStats = document.getElementById('category-stats');
      categoryStats.innerHTML = `
        <div class="alert alert-warning">
          <i class="bi bi-exclamation-triangle me-2"></i> Không thể tải dữ liệu thống kê. 
          <button class="btn btn-sm btn-outline-secondary ms-2" onclick="loadExpenseCategoryStats()">Thử lại</button>
        </div>
      `;
    });
  }

  // Tải trạng thái ngân sách
  function loadBudgetStatus() {
    fetch('/api/budgets/stats', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    })
    .then(response => {
      if (response.status === 401) {
        localStorage.removeItem('token');
        window.location.href = '/login';
        throw new Error('Phiên đăng nhập hết hạn');
      }
      if (!response.ok) throw new Error('Không thể tải dữ liệu ngân sách');
      return response.json();
    })
    .then(data => {
      const budgetStatus = document.getElementById('budget-status');
      
      if (data.length === 0) {
        budgetStatus.innerHTML = '<div class="text-center text-muted py-3">Chưa có ngân sách nào</div>';
        return;
      }
      
      let html = '<ul class="budget-status-list">';
      
      data.forEach(budget => {
        const percentage = Math.min(Math.round((budget.spent / budget.amount) * 100), 100);
        let statusClass = 'budget-status-normal';
        
        if (percentage >= 90) {
          statusClass = 'budget-status-exceeded';
        } else if (percentage >= 75) {
          statusClass = 'budget-status-warning';
        }
        
        html += `
          <li class="budget-status-item ${statusClass}">
            <div class="budget-status-header">
              <h6 class="budget-status-title">
                <i class="bi ${budget.category.icon}"></i> ${budget.category.name}
              </h6>
              <div class="budget-status-amount">
                ${formatCurrency(budget.spent)} / ${formatCurrency(budget.amount)}
              </div>
            </div>
            <div class="budget-status-progress">
              <div class="budget-status-bar" style="width: ${percentage}%"></div>
            </div>
            <div class="budget-status-info">
              <span>${budget.period}</span>
              <span>${percentage}%</span>
            </div>
          </li>
        `;
      });
      
      html += '</ul>';
      budgetStatus.innerHTML = html;
    })
    .catch(error => {
      console.error('Lỗi khi tải trạng thái ngân sách:', error);
      const budgetStatus = document.getElementById('budget-status');
      budgetStatus.innerHTML = `
        <div class="alert alert-warning">
          <i class="bi bi-exclamation-triangle me-2"></i> Không thể tải dữ liệu ngân sách. 
          <button class="btn btn-sm btn-outline-secondary ms-2" onclick="loadBudgetStatus()">Thử lại</button>
        </div>
      `;
    });
  }

  // Xử lý khi chọn khoảng thời gian khác cho cân đối thu chi
  document.querySelectorAll('.btn-group [data-period]').forEach(button => {
    button.addEventListener('click', function() {
      // Loại bỏ trạng thái active khỏi tất cả các nút
      document.querySelectorAll('.btn-group [data-period]').forEach(btn => {
        btn.classList.remove('active');
      });
      
      // Thêm trạng thái active cho nút được click
      this.classList.add('active');
      
      // Tải lại dữ liệu cân đối với khoảng thời gian mới
      const period = this.getAttribute('data-period');
      loadBalanceSummary(period);
    });
  });

  // Tải dữ liệu khi trang được load
  document.addEventListener('DOMContentLoaded', function() {
    loadBalanceSummary();
    loadRecentExpenses();
    loadExpenseCategoryStats();
    loadBudgetStatus();
  });
</script>
