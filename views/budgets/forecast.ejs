<div class="dashboard-summary">
    <% if (remainingBudget) { %>
        <div class="summary-card" style="background-color: #fff;">
            <div class="icon" style="background-color: #4361ee;">
                <i class="fas fa-wallet"></i>
            </div>
            <div class="info">
                <h3><%= new Intl.NumberFormat('vi-VN').format(remainingBudget.totalBudget) %> VND</h3>
                <p>T·ªïng ng√¢n s√°ch</p>
            </div>
        </div>
        <div class="summary-card" style="background-color: #fff;">
            <div class="icon" style="background-color: #e63946;">
                <i class="fas fa-chart-line"></i>
            </div>
            <div class="info">
                <h3><%= new Intl.NumberFormat('vi-VN').format(remainingBudget.totalExpenses) %> VND</h3>
                <p>ƒê√£ chi ti√™u</p>
            </div>
        </div>
        <div class="summary-card" style="background-color: #fff;">
            <div class="icon" style="background-color: #38b000;">
                <i class="fas fa-piggy-bank"></i>
            </div>
            <div class="info">
                <h3><%= new Intl.NumberFormat('vi-VN').format(remainingBudget.remainingBudget) %> VND</h3>
                <p>C√≤n l·∫°i</p>
            </div>
        </div>
    <% } else { %>
        <div class="summary-card" style="background-color: #fff;">
            <div class="icon" style="background-color: #e63946;">
                <i class="fas fa-exclamation-circle"></i>
            </div>
            <div class="info">
                <h3>Ch∆∞a c√≥ ng√¢n s√°ch</h3>
                <p>H√£y t·∫°o ng√¢n s√°ch th√°ng n√†y</p>
            </div>
        </div>
    <% } %>
</div>

<div class="card">
    <div class="card-header">
        <h2><i class="fas fa-chart-line"></i> D·ª± b√°o chi ti√™u</h2>
        <div>
            <a href="/budgets" class="btn"><i class="fas fa-piggy-bank"></i> Qu·∫£n l√Ω ng√¢n s√°ch</a>
        </div>
    </div>

    <% if (remainingBudget) { %>
        <div class="budget-overview">
            <div class="budget-progress">
                <h3>Ti·∫øn ƒë·ªô chi ti√™u th√°ng n√†y</h3>
                <div class="progress-container">
                    <div class="progress-bar" style="width: <%= Math.min(100, (remainingBudget.totalExpenses / remainingBudget.totalBudget) * 100) %>%;">
                        <%= Math.round((remainingBudget.totalExpenses / remainingBudget.totalBudget) * 100) %>%
                    </div>
                </div>
                <div class="progress-info">
                    <span>0 VND</span>
                    <span><%= new Intl.NumberFormat('vi-VN').format(remainingBudget.totalBudget) %> VND</span>
                </div>
            </div>

            <div class="budget-details">
                <div class="budget-item">
                    <div class="budget-label">T·ªïng ng√¢n s√°ch:</div>
                    <div class="budget-value"><%= new Intl.NumberFormat('vi-VN').format(remainingBudget.totalBudget) %> VND</div>
                </div>
                <div class="budget-item">
                    <div class="budget-label">ƒê√£ chi ti√™u:</div>
                    <div class="budget-value"><%= new Intl.NumberFormat('vi-VN').format(remainingBudget.totalExpenses) %> VND</div>
                </div>
                <div class="budget-item">
                    <div class="budget-label">M·ª•c ti√™u ti·∫øt ki·ªám:</div>
                    <div class="budget-value"><%= new Intl.NumberFormat('vi-VN').format(remainingBudget.savingsGoal) %> VND</div>
                </div>
                <div class="budget-item highlight">
                    <div class="budget-label">C√≤n l·∫°i c√≥ th·ªÉ chi ti√™u:</div>
                    <div class="budget-value"><%= new Intl.NumberFormat('vi-VN').format(remainingBudget.remainingBudget) %> VND</div>
                </div>
                <div class="budget-item">
                    <div class="budget-label">Ng√†y trong th√°ng:</div>
                    <div class="budget-value"><%= remainingBudget.currentDay %>/<%= remainingBudget.daysInMonth %></div>
                </div>
                <div class="budget-item highlight">
                    <div class="budget-label">Chi ti√™u h√†ng ng√†y c√≤n l·∫°i:</div>
                    <div class="budget-value"><%= new Intl.NumberFormat('vi-VN').format(Math.max(0, remainingBudget.dailyBudget)) %> VND</div>
                </div>
            </div>
        </div>

        <div class="category-spending">
            <h3>Chi ti√™u theo danh m·ª•c</h3>
            <div class="category-chart-container">
                <canvas id="categoryChart"></canvas>
            </div>
            <div class="category-table">
                <table>
                    <thead>
                        <tr>
                            <th>Danh m·ª•c</th>
                            <th>ƒê√£ chi</th>
                            <th>Gi·ªõi h·∫°n</th>
                            <th>C√≤n l·∫°i</th>
                            <th>Ti·∫øn ƒë·ªô</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% Object.keys(remainingBudget.categorySpending).forEach(category => { %>
                            <% const spending = remainingBudget.categorySpending[category]; %>
                            <tr>
                                <td>
                                    <span class="category-badge">
                                        <% if (category === 'ƒÇn u·ªëng') { %>
                                            üçï
                                        <% } else if (category === 'Di chuy·ªÉn') { %>
                                            üöó
                                        <% } else if (category === 'Mua s·∫Øm') { %>
                                            üõí
                                        <% } else if (category === 'H√≥a ƒë∆°n') { %>
                                            üìÑ
                                        <% } else if (category === 'Gi·∫£i tr√≠') { %>
                                            üéÆ
                                        <% } else { %>
                                            üìå
                                        <% } %>
                                        <%= category %>
                                    </span>
                                </td>
                                <td><%= new Intl.NumberFormat('vi-VN').format(spending.spent) %> VND</td>
                                <td><%= new Intl.NumberFormat('vi-VN').format(spending.limit) %> VND</td>
                                <td class="<%= spending.remaining < 0 ? 'negative' : '' %>">
                                    <%= new Intl.NumberFormat('vi-VN').format(spending.remaining) %> VND
                                </td>
                                <td>
                                    <div class="mini-progress">
                                        <div class="mini-progress-bar <%= spending.spent > spending.limit ? 'over-limit' : '' %>" 
                                             style="width: <%= spending.limit > 0 ? Math.min(100, (spending.spent / spending.limit) * 100) : 0 %>%;">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>

        <% if (forecast && Object.keys(forecast).length > 0) { %>
            <div class="forecast-section">
                <h3>D·ª± b√°o chi ti√™u</h3>
                <p class="hint">D·ª±a tr√™n l·ªãch s·ª≠ chi ti√™u 3 th√°ng g·∫ßn nh·∫•t</p>
                
                <div class="forecast-chart-container">
                    <canvas id="forecastChart"></canvas>
                </div>
                
                <div class="forecast-table">
                    <table>
                        <thead>
                            <tr>
                                <th>Danh m·ª•c</th>
                                <th>Trung b√¨nh 3 th√°ng</th>
                                <th>Th√°ng hi·ªán t·∫°i</th>
                                <th>D·ª± b√°o</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% Object.keys(forecast).forEach(category => { %>
                                <% const data = forecast[category]; %>
                                <tr>
                                    <td>
                                        <span class="category-badge">
                                            <% if (category === 'ƒÇn u·ªëng') { %>
                                                üçï
                                            <% } else if (category === 'Di chuy·ªÉn') { %>
                                                üöó
                                            <% } else if (category === 'Mua s·∫Øm') { %>
                                                üõí
                                            <% } else if (category === 'H√≥a ƒë∆°n') { %>
                                                üìÑ
                                            <% } else if (category === 'Gi·∫£i tr√≠') { %>
                                                üéÆ
                                            <% } else { %>
                                                üìå
                                            <% } %>
                                            <%= category %>
                                        </span>
                                    </td>
                                    <td><%= new Intl.NumberFormat('vi-VN').format(data.averageMonthly) %> VND</td>
                                    <td><%= new Intl.NumberFormat('vi-VN').format(data.currentMonth) %> VND</td>
                                    <td><%= new Intl.NumberFormat('vi-VN').format(data.projected) %> VND</td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        <% } %>

    <% } else { %>
        <div class="empty-message">
            <i class="fas fa-chart-line"></i>
            <p>Ch∆∞a c√≥ ng√¢n s√°ch n√†o ƒë∆∞·ª£c t·∫°o cho th√°ng hi·ªán t·∫°i.</p> 
            <a href="/budgets/new" class="btn btn-primary"><i class="fas fa-plus-circle"></i> T·∫°o ng√¢n s√°ch m·ªõi</a>
        </div>
    <% } %>
</div>

<% if (remainingBudget) { %>
<script>
    // Bi·ªÉu ƒë·ªì chi ti√™u theo danh m·ª•c
    const categoryCtx = document.getElementById('categoryChart').getContext('2d');
    const categoryData = {
        labels: [<% Object.keys(remainingBudget.categorySpending).forEach(category => { %>'<%= category %>', <% }); %>],
        datasets: [{
            label: 'ƒê√£ chi ti√™u',
            data: [<% Object.keys(remainingBudget.categorySpending).forEach(category => { %><%= remainingBudget.categorySpending[category].spent %>, <% }); %>],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }, {
            label: 'Gi·ªõi h·∫°n',
            data: [<% Object.keys(remainingBudget.categorySpending).forEach(category => { %><%= remainingBudget.categorySpending[category].limit %>, <% }); %>],
            backgroundColor: 'rgba(0, 0, 0, 0)',
            borderColor: 'rgba(0, 0, 0, 0.5)',
            borderWidth: 2,
            type: 'line'
        }]
    };
    
    new Chart(categoryCtx, {
        type: 'bar',
        data: categoryData,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                }
            }
        }
    });
    
    <% if (forecast && Object.keys(forecast).length > 0) { %>
    // Bi·ªÉu ƒë·ªì d·ª± b√°o
    const forecastCtx = document.getElementById('forecastChart').getContext('2d');
    const forecastData = {
        labels: [<% Object.keys(forecast).forEach(category => { %>'<%= category %>', <% }); %>],
        datasets: [{
            label: 'Trung b√¨nh 3 th√°ng',
            data: [<% Object.keys(forecast).forEach(category => { %><%= forecast[category].averageMonthly %>, <% }); %>],
            backgroundColor: 'rgba(54, 162, 235, 0.2)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }, {
            label: 'Th√°ng hi·ªán t·∫°i',
            data: [<% Object.keys(forecast).forEach(category => { %><%= forecast[category].currentMonth %>, <% }); %>],
            backgroundColor: 'rgba(255, 99, 132, 0.2)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1
        }, {
            label: 'D·ª± b√°o',
            data: [<% Object.keys(forecast).forEach(category => { %><%= forecast[category].projected %>, <% }); %>],
            backgroundColor: 'rgba(255, 206, 86, 0.2)',
            borderColor: 'rgba(255, 206, 86, 1)',
            borderWidth: 1
        }]
    };
    
    new Chart(forecastCtx, {
        type: 'bar',
        data: forecastData,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                }
            }
        }
    });
    <% } %>
</script>
<% } %>

<style>
    .budget-overview {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        margin-bottom: 2rem;
    }
    
    .budget-progress {
        flex: 1;
        min-width: 300px;
    }
    
    .budget-details {
        flex: 1;
        min-width: 300px;
    }
    
    .progress-container {
        height: 24px;
        background-color: #e2e8f0;
        border-radius: 12px;
        overflow: hidden;
        margin: 1rem 0;
    }
    
    .progress-bar {
        height: 100%;
        background: linear-gradient(135deg, #3a86ff, #4361ee);
        color: white;
        text-align: center;
        line-height: 24px;
        font-weight: 500;
        transition: width 0.5s ease;
    }
    
    .progress-info {
        display: flex;
        justify-content: space-between;
        font-size: 0.85rem;
        color: var(--text-muted);
    }
    
    .budget-item {
        display: flex;
        justify-content: space-between;
        padding: 0.75rem 0;
        border-bottom: 1px solid #e2e8f0;
    }
    
    .budget-item.highlight {
        font-weight: 700;
        color: var(--primary-color);
    }
    
    .category-spending, .forecast-section {
        margin-top: 3rem;
    }
    
    .category-spending h3, .forecast-section h3 {
        margin-bottom: 1.5rem;
        color: var(--dark-color);
        display: flex;
        align-items: center;
        gap: 8px;
    }
    
    .category-chart-container, .forecast-chart-container {
        height: 300px;
        margin-bottom: 2rem;
    }
    
    .category-table table, .forecast-table table {
        width: 100%;
        border-collapse: collapse;
    }
    
    .category-table th, .category-table td, .forecast-table th, .forecast-table td {
        padding: 0.75rem;
        text-align: left;
        border-bottom: 1px solid #e2e8f0;
    }
    
    .category-table th, .forecast-table th {
        background-color: #f8fafc;
        font-weight: 600;
    }
    
    .mini-progress {
        height: 8px;
        background-color: #e2e8f0;
        border-radius: 4px;
        overflow: hidden;
        width: 100%;
    }
    
    .mini-progress-bar {
        height: 100%;
        background-color: #38b000;
        transition: width 0.5s ease;
    }
    
    .mini-progress-bar.over-limit {
        background-color: #e63946;
    }
    
    .negative {
        color: #e63946;
    }
    
    .hint {
        color: var(--text-muted);
        margin-bottom: 1.5rem;
        font-size: 0.9rem;
    }
    
    @media (max-width: 768px) {
        .budget-overview {
            flex-direction: column;
        }
        
        .category-table, .forecast-table {
            overflow-x: auto;
        }
    }
</style>
