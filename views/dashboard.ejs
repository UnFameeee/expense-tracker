<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Quản lý Chi tiêu</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
  <style>
    .card {
      border-radius: 10px;
      border: 1px solid rgba(0,0,0,.1);
      box-shadow: 0 2px 4px rgba(0,0,0,.05);
    }
    
    .expense-form {
      background: #f8f9fa;
      border-radius: 10px;
      padding: 20px;
    }

    .table th {
      font-weight: 600;
      color: #495057;
    }

    .table td {
      vertical-align: middle;
    }

    .amount {
      font-weight: 600;
      color: #dc3545;
    }

    .summary-card {
      background: linear-gradient(45deg, #72d1a8, #43e6a0);
      color: white;
    }

    .summary-card .amount {
      color: white;
      font-size: 24px;
      font-weight: bold;
    }

    .btn-icon {
      width: 32px;
      height: 32px;
      padding: 0;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      border-radius: 6px;
      background: #f8f9fa;
      border: 1px solid #e0e0e0;
      transition: background 0.2s, border 0.2s;
    }
    .btn-icon:hover {
      background: #e6fcf3;
      border: 1px solid #72d1a8;
    }
    .edit-expense i {
      color: #43e6a0 !important;
    }
    .delete-expense i {
      color: #e74c3c !important;
    }
    .edit-expense.btn-icon:focus, .edit-expense.btn-icon:active {
      box-shadow: 0 0 0 2px #72d1a833;
    }
    .delete-expense.btn-icon:focus, .delete-expense.btn-icon:active {
      box-shadow: 0 0 0 2px #e74c3c33;
    }
    /* Đảm bảo không bị lẫn màu text-primary cho icon sửa */
    .edit-expense i.bi {
      color: #43e6a0 !important;
    }
    /* Đảm bảo không bị lẫn màu text-danger cho icon xoá */
    .delete-expense i.bi {
      color: #e74c3c !important;
    }
    
    /* CSS cho modal */
    .modal-content {
      border-radius: 10px;
      border: none;
    }
    
    .modal-header {
      border-bottom: 1px solid rgba(0,0,0,.1);
      background-color: #f8f9fa;
    }
  </style>
</head>
<body class="bg-light">
  <div class="container py-4">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h4 class="mb-0 fw-bold">Chi tiêu hàng ngày</h4>
      <div>
        <button id="logout-btn" class="btn btn-outline-secondary btn-sm me-2">
          <i class="bi bi-box-arrow-right"></i> Đăng xuất
        </button>
        <button class="btn btn-outline-secondary btn-sm">
          <i class="bi bi-calendar3"></i> Tháng 4, 2025
        </button>
      </div>
    </div>

    <div class="row g-4">
      <!-- Left Column -->
      <div class="col-lg-8">
        <!-- Add Expense Form -->
        <div class="card mb-4">
          <div class="card-body">
            <form id="expense-form" class="row g-3">
              <div class="col-md-4">
                <label class="form-label">Số tiền</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="bi bi-currency-dollar"></i></span>
                  <input type="number" id="amount" class="form-control" required>
                </div>
              </div>
              <div class="col-md-4">
                <label class="form-label">Mô tả</label>
                <input type="text" id="description" class="form-control" required>
              </div>
              <div class="col-md-4">
                <label class="form-label">Ngày</label>
                <input type="date" id="date" class="form-control" required>
              </div>
              <div class="col-12">
                <button type="submit" class="btn btn-primary">
                  <i class="bi bi-plus-circle me-1"></i>
                  Thêm chi tiêu
                </button>
              </div>
            </form>
          </div>
        </div>

        <!-- Expenses Table -->
        <div class="card">
          <div class="card-body p-0">
            <div class="table-responsive">
              <table class="table table-hover align-middle mb-0">
                <thead class="bg-light">
                  <tr>
                    <th class="ps-4">Mô tả</th>
                    <th>Ngày</th>
                    <th class="text-end">Số tiền</th>
                    <th width="100" class="text-center">Thao tác</th>
                  </tr>
                </thead>
                <tbody id="expense-list">
                  <!-- Expenses will be listed here -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <!-- Right Column -->
      <div class="col-lg-4">
        <!-- Summary Card -->
        <div class="card summary-card mb-4">
          <div class="card-body">
            <h6 class="text-white-50 mb-2">Tổng chi tháng này</h6>
            <div id="total-amount" class="amount mb-2">0đ</div>
            <small class="text-white-50">Cập nhật lúc <%= new Date().toLocaleTimeString('vi-VN') %></small>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Edit Expense Modal -->
  <div class="modal fade" id="editExpenseModal" tabindex="-1" aria-labelledby="editExpenseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editExpenseModalLabel">Sửa khoản chi tiêu</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="edit-expense-form" class="row g-3">
            <input type="hidden" id="edit-expense-id">
            <div class="col-md-12 mb-3">
              <label class="form-label">Số tiền</label>
              <div class="input-group">
                <span class="input-group-text"><i class="bi bi-currency-dollar"></i></span>
                <input type="number" id="edit-amount" class="form-control" required>
              </div>
            </div>
            <div class="col-md-12 mb-3">
              <label class="form-label">Mô tả</label>
              <input type="text" id="edit-description" class="form-control" required>
            </div>
            <div class="col-md-12 mb-3">
              <label class="form-label">Ngày</label>
              <input type="date" id="edit-date" class="form-control" required>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
          <button type="button" id="save-edit-expense" class="btn btn-primary">Lưu thay đổi</button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Delete Confirmation Modal -->
  <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-sm">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Xác nhận xóa</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>Bạn có chắc chắn muốn xóa khoản chi tiêu này?</p>
          <input type="hidden" id="delete-expense-id">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
          <button type="button" id="confirm-delete" class="btn btn-danger">Xóa</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Token check
    if (!localStorage.getItem('token')) {
      window.location.href = '/login';
    }

    function getToken() {
      return localStorage.getItem('token');
    }

    // Fetch expenses
    function fetchExpenses() {
      fetch('/api/expenses', {
        headers: {
          'Authorization': 'Bearer ' + getToken()
        }
      })
        .then(res => {
          if(res.status === 401) {
            localStorage.removeItem('token');
            window.location.href = '/login';
            return;
          }
          return res.json();
        })
        .then(data => {
          const list = document.getElementById('expense-list');
          const totalAmountElement = document.getElementById('total-amount');
          let total = 0;
          
          if (!data || data.length === 0) {
            list.innerHTML = '<tr><td colspan="4" class="text-center text-muted py-4">Chưa có chi tiêu nào</td></tr>';
            totalAmountElement.innerText = '0đ';
            return;
          }
          
          list.innerHTML = '';
          data.forEach(item => {
            total += item.amount;
            const tr = document.createElement('tr');
            tr.innerHTML = `
              <td class="ps-4">${item.description}</td>
              <td>${new Date(item.date).toLocaleDateString('vi-VN')}</td>
              <td class="text-end amount">${item.amount.toLocaleString()}đ</td>
              <td class="text-center">
                <button class="btn btn-icon btn-light me-1 edit-expense" data-id="${item.id}" title="Sửa">
                  <i class="bi bi-pencil-square"></i>
                </button>
                <button class="btn btn-icon btn-light delete-expense" data-id="${item.id}" title="Xóa">
                  <i class="bi bi-trash text-danger"></i>
                </button>
              </td>
            `;
            list.appendChild(tr);
          });
          
          // Cập nhật tổng số tiền
          totalAmountElement.innerText = total.toLocaleString() + 'đ';
          
          // Gán sự kiện cho nút sửa và xóa
          setupEditButtons();
          setupDeleteButtons();
        })
        .catch(err => {
          console.error('Lỗi khi lấy dữ liệu:', err);
        });
    }

    // Gán sự kiện cho nút sửa
    function setupEditButtons() {
      document.querySelectorAll('.edit-expense').forEach(button => {
        button.addEventListener('click', function() {
          const expenseId = this.getAttribute('data-id');
          
          // Lấy thông tin từ hàng
          const row = this.closest('tr');
          const description = row.cells[0].innerText;
          const dateString = row.cells[1].innerText;
          const amount = row.cells[2].innerText.replace(/\D/g, '');
          
          // Chuyển đổi ngày sang định dạng YYYY-MM-DD cho input date
          const dateParts = dateString.split('/');
          const formattedDate = `${dateParts[2]}-${dateParts[1].padStart(2, '0')}-${dateParts[0].padStart(2, '0')}`;
          
          // Điền dữ liệu vào form
          document.getElementById('edit-expense-id').value = expenseId;
          document.getElementById('edit-amount').value = amount;
          document.getElementById('edit-description').value = description;
          document.getElementById('edit-date').value = formattedDate;
          
          // Mở modal
          const modal = new bootstrap.Modal(document.getElementById('editExpenseModal'));
          modal.show();
        });
      });
    }
    
    // Gán sự kiện cho nút xóa
    function setupDeleteButtons() {
      document.querySelectorAll('.delete-expense').forEach(button => {
        button.addEventListener('click', function() {
          const expenseId = this.getAttribute('data-id');
          document.getElementById('delete-expense-id').value = expenseId;
          
          // Mở modal xác nhận
          const modal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
          modal.show();
        });
      });
    }

    // Xử lý lưu thay đổi
    document.getElementById('save-edit-expense').addEventListener('click', function() {
      const id = document.getElementById('edit-expense-id').value;
      const amount = document.getElementById('edit-amount').value;
      const description = document.getElementById('edit-description').value;
      const date = document.getElementById('edit-date').value;
      
      if (!amount || !description || !date) {
        alert('Vui lòng điền đầy đủ thông tin!');
        return;
      }
      
      // Gửi API cập nhật
      fetch(`/api/expenses/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer ' + getToken()
        },
        body: JSON.stringify({ amount, description, date })
      })
      .then(res => {
        if(res.status === 401) {
          localStorage.removeItem('token');
          window.location.href = '/login';
          return;
        }
        return res.json();
      })
      .then(data => {
        if(data.success) {
          // Đóng modal
          bootstrap.Modal.getInstance(document.getElementById('editExpenseModal')).hide();
          
          // Cập nhật lại danh sách
          fetchExpenses();
        } else {
          alert(data.error || 'Có lỗi xảy ra!');
        }
      })
      .catch(err => {
        console.error('Lỗi khi cập nhật:', err);
        alert('Lỗi kết nối server!');
      });
    });
    
    // Xử lý xóa
    document.getElementById('confirm-delete').addEventListener('click', function() {
      const id = document.getElementById('delete-expense-id').value;
      
      // Gửi API xóa
      fetch(`/api/expenses/${id}`, {
        method: 'DELETE',
        headers: {
          'Authorization': 'Bearer ' + getToken()
        }
      })
      .then(res => {
        if(res.status === 401) {
          localStorage.removeItem('token');
          window.location.href = '/login';
          return;
        }
        return res.json();
      })
      .then(data => {
        if(data.success) {
          // Đóng modal
          bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal')).hide();
          
          // Cập nhật lại danh sách
          fetchExpenses();
        } else {
          alert(data.error || 'Có lỗi xảy ra!');
        }
      })
      .catch(err => {
        console.error('Lỗi khi xóa:', err);
        alert('Lỗi kết nối server!');
      });
    });

    // Thêm mới chi tiêu
    document.getElementById('expense-form').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const amount = document.getElementById('amount').value;
      const description = document.getElementById('description').value;
      const date = document.getElementById('date').value;

      fetch('/api/expenses', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer ' + getToken()
        },
        body: JSON.stringify({ amount, description, date })
      })
        .then(res => {
          if(res.status === 401) {
            localStorage.removeItem('token');
            window.location.href = '/login';
            return;
          }
          return res.json();
        })
        .then(data => {
          if(data.success) {
            document.getElementById('amount').value = '';
            document.getElementById('description').value = '';
            fetchExpenses();
          } else {
            alert(data.error || 'Có lỗi xảy ra khi thêm chi tiêu!');
          }
        })
        .catch(err => {
          console.error('Lỗi khi thêm chi tiêu:', err);
          alert('Lỗi kết nối server!');
        });
    });
    
    // Đăng xuất
    document.getElementById('logout-btn').addEventListener('click', function() {
      localStorage.removeItem('token');
      window.location.href = '/login';
    });

    // Initialize
    document.addEventListener('DOMContentLoaded', function() {
      const today = new Date().toISOString().split('T')[0];
      document.getElementById('date').value = today;
      fetchExpenses();
    });
  </script>
</body>
</html>
